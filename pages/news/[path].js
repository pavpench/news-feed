//Dynamic route

import { handler } from "../api/index";
import Head from "next/head";
import Link from "next/link";
import Layout from "@/components/Layout";
import List from "@/components/List";

export default function News(props) {
  return (
    <Layout>
      <Head>
        <title>{props.title}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* <main>
        <h1>{title}</h1>
        <ul>
          {results?.map((result) => (
            <li key={result.url}>
              <Link href={result.url} target="_blank" rel="noopener noreferrer">
                {result.title}
              </Link>
            </li>
          ))}
        </ul>
      </main> */}

      <List {...props} />
    </Layout>
  );
}

export async function getStaticPaths() {
  return {
    paths: [
      { params: { path: "top-stories" } },
      { params: { path: "popular" } },
    ],
    fallback: true,
  };
}

//NY times API for fetching data
const API_KEY = "plbCTSLsncuKnvXzlc8Cf02XQkGGVuz6";

//Prerender data on request time based on user input
export async function getStaticProps({ params }) {
  const TOP_STORIES_URL = `https://api.nytimes.com/svc/topstories/v2/home.json?api-key=${API_KEY}`;
  const MOST_POPULAR_URL = `https://api.nytimes.com/svc/mostpopular/v2/viewed/1.json?api-key=${API_KEY}`;

  switch (params.path) {
    case "top-stories":
      return {
        props: {
          results: await handler(TOP_STORIES_URL),
          title: "Top Stories",
        },
      };
    case "popular":
      return {
        props: {
          results: await handler(MOST_POPULAR_URL),
          title: "Popular",
        },
      };
    default: {
      return {
        props: null,
      };
    }
  }
}
